plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
    id "org.sonarqube" version "4.4.1.3373"
    id "org.openapi.generator" version "${openapi_generator_version}"
    id 'application'
    id 'jacoco'
}

group = 'com.quantum-pixel'
version = "${project_version}"
sonar {
    properties {
        property "sonar.projectKey", "quantum-pixel-team_e-commerce"
        property "sonar.organization", "quantum-pixel-team"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}
java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.liquibase:liquibase-core'

    compileOnly 'org.projectlombok:lombok'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'

    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'

    // others
    // mapstruct
    implementation "org.mapstruct:mapstruct:$mapstruct_version"
    annotationProcessor "org.mapstruct:mapstruct-processor:$mapstruct_version"
}


bootJar {
    archiveFileName = 'api.jar'
    layered {
        application {
            intoLayer("spring-boot-loader") {
                include "org/springframework/boot/loader/**"
            }
            intoLayer("application")
        }
        dependencies {
            intoLayer("application") {
                includeProjectDependencies()
            }
            intoLayer("snapshot-dependencies") {
                include "*:*:*SNAPSHOT"
            }
            intoLayer("hibernate-deps") {
                include "org.hibernate*:*:*"
            }
            intoLayer("spring-deps") {
                include "org.springframework*:*"
            }
            intoLayer("dependencies")
        }
        layerOrder = ["spring-deps", "dependencies", "hibernate-deps", "spring-boot-loader", "snapshot-dependencies", "application"]
    }
}
apply from: "gradle/integration-test.gradle"
apply from: "gradle/unit-test.gradle"
apply from: "gradle/openapi.gradle"
